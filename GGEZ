local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))() -- Load Rayfield
local Window = Rayfield:CreateWindow({
    Name = "KUYHEETAD",
    LoadingTitle = "KUYHEETAD",
    LoadingSubtitle = "by Sirius",
    Theme = "Default",
    ConfigurationSaving = {
        Enabled = true,
        FolderName = nil,
        FileName = "HEE Hub"
    },
    KeySystem = false
})

local Tab = Window:CreateTab("Main", 4483362458) -- Create Main Tab

local Section = Tab:CreateSection("Menu Options")

-- Enable ESP Function
local function EnableESP()
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    
    local function createESP(character)
        if character and not character:FindFirstChild("ESPBox") then
            local highlight = Instance.new("Highlight")
            highlight.Name = "ESPBox"
            highlight.Parent = character
            highlight.FillColor = Color3.fromRGB(255, 0, 0) -- Red color
            highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
            highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        end
    end
    
    local function updateESP()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local character = player.Character
                if character then
                    createESP(character)
                end
            end
        end
    end
    
    updateESP()
    
    Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            createESP(character)
        end)
    end)
end

-- Button to Enable ESP
Tab:AddButton({
    Name = "Enable ESP",
    Callback = EnableESP
})

-- Fly Hack Function
local flying = false
local bodyVelocity
local function ToggleFly()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    
    if humanoidRootPart then
        if not flying then
            flying = true
            bodyVelocity = Instance.new("BodyVelocity", humanoidRootPart)
            bodyVelocity.Velocity = Vector3.new(0, 50, 0) -- Fly upwards
            bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        else
            flying = false
            if bodyVelocity then
                bodyVelocity:Destroy()
                bodyVelocity = nil
            end
        end
    end
end

-- Button to Toggle Fly Hack
Tab:AddButton({
    Name = "Fly Hack",
    Callback = ToggleFly
})

-- Speed Hack Function
local speedEnabled = false
local function ToggleSpeed()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    if humanoid then
        if not speedEnabled then
            speedEnabled = true
            humanoid.WalkSpeed = 100 -- Increase walk speed
        else
            speedEnabled = false
            humanoid.WalkSpeed = 16 -- Reset to default
        end
    end
end

-- Button to Toggle Speed Hack
Tab:AddButton({
    Name = "Speed Hack",
    Callback = ToggleSpeed
})

-- Jump Hack Function
local jumpEnabled = false
local function ToggleJump()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    
    if humanoid then
        if not jumpEnabled then
            jumpEnabled = true
            humanoid.JumpPower = 150 -- Increase jump power
        else
            jumpEnabled = false
            humanoid.JumpPower = 50 -- Reset to default
        end
    end
end

-- Button to Toggle Jump Hack
Tab:AddButton({
    Name = "Jump Hack",
    Callback = ToggleJump
})

-- NoClip Function
local noclipEnabled = false
local function ToggleNoClip()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    
    if character then
        noclipEnabled = not noclipEnabled
        for _, part in ipairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = not noclipEnabled
            end
        end
    end
end

-- Button to Toggle NoClip
Tab:AddButton({
    Name = "NoClip",
    Callback = ToggleNoClip
})

-- Other Options
Tab:AddButton({
    Name = "Option 2",
    Callback = function()
        print("Option 2 selected")
    end
})

-- Toggle Feature
Tab:AddToggle({
    Name = "Enable Feature",
    Default = false,
    Callback = function(state)
        print(state and "Feature Enabled" or "Feature Disabled")
    end
})

-- Slider to Set Value
Tab:AddSlider({
    Name = "Set Value",
    Min = 1,
    Max = 100,
    Default = 50,
    Callback = function(value)
        print("Slider Value: " .. value)
    end
})
